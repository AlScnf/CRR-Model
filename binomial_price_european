# This would calculate the price of a European call option with a spot price of 100, 
#strike price of 100, risk-free interest rate of 5%, dividend yield of 3%, time to maturity of 6 months (0.5 years), 
#volatility of 20%, and the number of steps in the binomial tree equal to 100

import math

def binomial_price(S, K, r, q, T, sigma, n, option_type):
   
    dt = T / n
    u = math.exp(sigma * math.sqrt(dt))
    d = 1 / u
    p = (math.exp((r - q) * dt) - d) / (u - d)
    prices = [0] * (n + 1)
    for i in range(n + 1):
        prices[i] = S * (u ** i) * (d ** (n - i))
    if option_type == 'call':
        option_values = [max(0, px - K) for px in prices]
    elif option_type == 'put':
        option_values = [max(0, K - px) for px in prices]
    else:
        raise ValueError("Invalid option type")
    for i in range(n - 1, -1, -1):
        for j in range(i + 1):
            option_values[j] = math.exp(-r * dt) * (p * option_values[j] + (1 - p) * option_values[j + 1])
    return option_values[0]


price = binomial_price(S=100, K=100, r=0.05, q=0.03, T=0.5, sigma=0.2, n=100, option_type='call')
print(price)
